<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org// Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fourjo.idle.goodgame.gg.repository.MyPageRepository">

    <!--0. 더미데이터 생성-->
    <insert id="insertUserData" parameterType="fourjo.idle.goodgame.gg.web.dto.user.UserDTO">
        insert into user_mst
        values(0, #{userId}, #{userPw}, #{userNick}, #{userGender}, now(), #{userEmail}, #{roleId})
    </insert>

    <!--1. 회원탈퇴-->
    <!--<delete id="deleteUserAllData" parameterType="fourjo.idle.goodgame.gg.web.dto.user.UserDTO">
        delete from user_mst where userId=#{userId}
    </delete>-->

    <delete id="deleteUserAllData">
        delete from user_mst WHERE userIndex = #{userIndex}
    </delete>
    <select id="pwCheck" resultType="java.lang.String">
        select userPw from user_mst where userId=#{userId}
    </select>



    <!--===================================================================-->
    <!--2. 회원정보 수정-->
    <!--//BindingException : Parameter '파라미터명' not found. Available parameters are [arg1, arg0, param1, param2]
    발생원인 : MyBatis를 이용한 SQL Mapper의 메소드는 하나의 파라미터만을 읽음. 즉, 파라미터의 개수가 2개 이상일 때 발생
    발생 예시: 하나의 파라미터만 읽기 때문에 2개 이상에 파라미터를 주는 경우 해당데이터가 어떤 것인지를 명시하지 않으면 에러 발생
    해결 방안: @Param 어노테이션을 사용하여 명시-->
    <update id="updateMypageInfo" parameterType="fourjo.idle.goodgame.gg.web.dto.user.UserDTO">
        update user_mst set userPw=#{userPw},userNick=#{userNick},userGender=#{userGender},userEmail=#{userEmail}
        where userId=#{userId}
    </update>

    <!--3. 내가 쓴 글 목록-->
    <select id="searchMyPostListByIndex" resultType="fourjo.idle.goodgame.gg.web.dto.board.BoardDTO">
        select * from board_mst bm
        inner join user_mst um on (bm.userIndex = um.userIndex)
        where
        bm.userIndex = #{userIndex}
    </select>

    <!--4. 내가 쓴 댓글 목록-->
    <select id="searchMyReplyListByIndex" resultType="fourjo.idle.goodgame.gg.web.dto.user.ReplyDTO">
        select boardIndex=#{boardIndex}, replyContent=#{replyContent},  replyRegDate=#{replyRegDate}
        from
        reply_mst rm
        inner join user_mst um on (rm.userIndex = um.userIndex)
        where
        rm.userIndex = #{userIndex}
    </select>

</mapper>